name: Full‑Stack CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ─── Node.js Backend ───────────────────────────────────────────────────────
  node-ci:
    name: Node.js API CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: secure-fullstack-template/secure-fullstack-template/backend/node-api
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with: { node-version: '18' }

      - name: Install dependencies
        run: |
          npm install

      - name: Run tests
        run: |
          npm test

  # ─── Python (Flask) Backend ──────────────────────────────────────────────
  python-ci:
    name: Python (Flask) API CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: secure-fullstack-template/secure-fullstack-template/backend/flask-api
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with: { python-version: '3.10' }

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest

  # ─── React Frontend ───────────────────────────────────────────────────────
  react-ci:
    name: React Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: secure-fullstack-template/secure-fullstack-template/frontend
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with: { node-version: '18' }

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install & build
        run: |
          npm install
          npm run build

      - name: Run tests
        run: |
          npm test -- --watchAll=false

  # ─── Security Scan (Semgrep + Bandit) ────────────────────────────────────
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: secure-fullstack-template/secure-fullstack-template
    steps:
      - uses: actions/checkout@v3

      - name: Install Semgrep
        run: |
          pip install semgrep

      - name: Run Semgrep
        run: |
          semgrep --config=auto --exclude venv --exclude node_modules .

      - name: Install Bandit
        run: |
          pip install bandit

      - name: Run Bandit on Flask API
        run: |
          bandit -r backend/flask-api -ll
